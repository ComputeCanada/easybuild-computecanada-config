import sys
import os
import site

# print debug messages when $EBPYTHONPREFIXES_DEBUG is defined
debug = os.getenv('EBPYTHONPREFIXES_DEBUG')


# The priority of paths is as followed:
# EBPYTHONPREFIXES_PRIORITY
# core python functions (part of the language)
# python modules installed in virtual environments
# EBPYTHONPREFIXES
# python modules installed in the python module

ebpythonprefixes = os.getenv('EBPYTHONPREFIXES')
ebpythonprefixes_priority = os.getenv('EBPYTHONPREFIXES_PRIORITY')
virtualenv = os.getenv('VIRTUAL_ENV')

postfix = os.path.join('lib', 'python' + '.'.join(map(str, sys.version_info[:2])), 'site-packages')
if debug:
    print("[EBPYTHONPREFIXES] post subdirectory to consider in installation directories: %s" % postfix)


def addsitedir(sitedir, location=None):
    current_path = sys.path.copy()
    if debug:
        print("[EBPYTHONPREFIXES] processing %s" % sitedir)
    site.addsitedir(sitedir)
    diff_path = [x for x in sys.path if x not in current_path]
    if debug:
        print("[EBPYTHONPREFIXES] paths added by addsitedir: %s" % diff_path)

    if location is not None:
        if debug:
            print("[EBPYTHONPREFIXES] inserting into location %s" % location)
        sys.path = current_path
        for path in reversed(diff_path):
            sys.path.insert(location, path)
        if debug:
            print("[EBPYTHONPREFIXES] resulting sys.path %s" % sys.path)


if ebpythonprefixes_priority:
    for prefix in ebpythonprefixes_priority.split(os.pathsep):
        if debug:
            print("[EBPYTHONPREFIXES] prefix: %s" % prefix)

        sitedir = os.path.join(prefix, postfix)
        if os.path.isdir(sitedir):
            addsitedir(sitedir, 0)

if ebpythonprefixes:
    for prefix in ebpythonprefixes.split(os.pathsep):
        if debug:
            print("[EBPYTHONPREFIXES] prefix: %s" % prefix)
        sitedir = os.path.join(prefix, postfix)
        if os.path.isdir(sitedir):
            # use prefixes from EBPYTHONPREFIXES, so they have lower priority than
            # virtualenv-installed packages
            if virtualenv or "/cvmfs/soft.computecanada.ca/easybuild/software" not in sys.executable:
                addsitedir(sitedir)
            # if it is not a virtualenv, we should actually add the prefix before the root python dir
            # because the module may be trying to overwrite python modules installed in the base python
            else:
                addsitedir(sitedir,-1)

if debug:
    print("[EBYPTHONPREFIXES] resulting sitedir: %s" % "\n".join(sys.path))



# Append site-packages in Nix profile to sys.path so packages can be found there.
# This avoids needing to set PYTHONPATH to this directory.
# virtualenv uses a private site-packages directory so this should NOT be done inside
# a virtualenv; in that case
# /cvmfs/soft.computecanada.ca/nix/store/<hash>/lib/pythonx.y/site-packages
# is not in sys.path either

def get_base_prefix():
    """Get base prefix, valid for virtualenv, pyvenv, and python without virtualenv"""
    return getattr(sys, 'real_prefix', getattr(sys, 'base_prefix', sys.prefix))

if get_base_prefix().startswith('/cvmfs/soft.computecanada.ca/nix/store/'):
    newprefix = os.environ.get("EBROOTPYTHON")
    if newprefix is not None:
        postfix = os.path.join('lib', 'python' + '.'.join(map(str, sys.version_info[:2])), 'site-packages')
        nixstoresitepackages = os.path.join(sys.prefix, postfix)
        if nixstoresitepackages in sys.path:
            site.addsitedir(os.path.join(newprefix, postfix))
